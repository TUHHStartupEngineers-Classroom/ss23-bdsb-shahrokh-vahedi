{
  "hash": "5bbe696f9ffeef56ce4af7e30718e74d",
  "result": {
    "markdown": "---\ntitle: \"Data Acquisition\"\nauthor: \"Shahrokh Vahedi\"\n---\n\n\n# Challenge: Get Data via an API\n\nIn this code, occurrence data for the honeybee species was fetched using the GBIF API. The latitude and longitude of the occurrences were then plotted on a map of the world using the `ggplot2` and `maps` packages in R. The resulting plot (Fig. 1) shows the distribution of honeybee occurrences (the fetched data is primarily for America continent).\n\n![Fig. 1 The Bio-diversity scatter plot of Honey Bee](../../assets/img/challenge1_data_aquisition.png)\n\n\n# Scrape one of the competitor websites of canyon (either https://www.rosebikes.de/ or https://www.radon-bikes.de) and create a small database\n\nUnfortunately, I was not able to get the hang of html structure and do scraping. So I will leave this part Blank\n\n# Source code\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-1_33b486770089621c7908a018df54743e'}\n\n```{.r .cell-code}\n# Load required libraries\nlibrary(httr)\nlibrary(jsonlite)\n\n# Define API endpoint and parameters\napi_url <- \"https://api.gbif.org/v1/occurrence/search\"\nparams <- list(\n  taxonKey = 2435098, # Taxon key for the species (e.g., 2435098 for \"Apis mellifera\" - the honeybee)\n  limit = 300         # Number of records to fetch (max 300)\n)\n\n# Send GET request to the API\nresponse <- GET(api_url, query = params)\n\n\n\n# Check the HTTP status code\nstatus_code <- status_code(response)\nif (status_code == 200) {\n  # Successful response\n  print(\"Request successful!\")\n  # Parse JSON response\n  json_data <- content(response, as = \"text\", encoding = \"UTF-8\")\n  data <- fromJSON(json_data, flatten = TRUE)\n  \n  # Convert the results to a dataframe\n  occurrences_df <- as.data.frame(data$results)\n  \n  # Print the dataframe\n\n} else {\n  # Unsuccessful response\n  print(paste(\"Request failed with status code:\", status_code))\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"Request successful!\"\n```\n:::\n\n```{.r .cell-code}\n# Load required libraries\nlibrary(ggplot2)\nlibrary(ggmap)\nlibrary(maps)\n\n# Remove rows with missing latitude or longitude\noccurrences_df <- occurrences_df[!is.na(occurrences_df$decimalLatitude) & !is.na(occurrences_df$decimalLongitude),]\n\n# Get the world map data\nworld_map <- map_data(\"world\")\n\n# Create a ggplot object with the world map\nmap_plot <- ggplot() +\n  geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = \"gray80\", color = \"gray50\") +\n  theme_minimal()\n\n# Add the scatter plot of latitude and longitude on top of the map\nmap_plot + geom_point(data = occurrences_df, aes(x = decimalLongitude, y = decimalLatitude), color = \"blue\", alpha = 0.5) +\n  labs(title = \"Bio-diversity of Honey Bees\", x = \"Longitude\", y = \"Latitude\")\n```\n\n::: {.cell-output-display}\n![](02_data_acquisition_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
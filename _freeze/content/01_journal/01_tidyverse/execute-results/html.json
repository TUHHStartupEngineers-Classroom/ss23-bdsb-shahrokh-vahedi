{
  "hash": "8955e4d012de1cc2c7952814b5286fa2",
  "result": {
    "markdown": "---\ntitle: \"Tidyverse\"\nauthor: \"Shahrokh Vahedi\"\n---\n\n\n\n\n# Challenge 1.1 Analyze of the sales by location\n\nThe following figure shows the bar plot for sales by each state. As can be seen from *Fig. 1*, the State of **NRW** has the highest revenue of 21.200.613 euro.\n\n![Fig. 1 Bar Plot of sales for each state in Germany](../../assets/img/Challenge 1.1.png)\n\n# Challenge 1.2 Analyze of the sales by location and year\n*Figure 2* shows the bar plot for sales by each state and each year. \n\n![Fig. 2 Bar Plot of sales for each state in Germany](../../assets/img/Challenge 1.2.png)\n\n\n\n# Source Code\n\n\n\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-1_fed4ba5e2829084b79f293c646aefc28'}\n\n```{.r .cell-code}\n# Data Science at TUHH ------------------------------------------------------\n# SALES ANALYSIS ----\n\n# 1.0 Load libraries ----\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> -- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\n#> v dplyr     1.1.2     v readr     2.1.4\n#> v forcats   1.0.0     v stringr   1.5.0\n#> v ggplot2   3.4.2     v tibble    3.2.1\n#> v lubridate 1.9.2     v tidyr     1.3.0\n#> v purrr     1.0.1     \n#> -- Conflicts ------------------------------------------ tidyverse_conflicts() --\n#> x dplyr::filter() masks stats::filter()\n#> x dplyr::lag()    masks stats::lag()\n#> i Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\n\n# 2.0 Importing Files ----\nbikes_tbl      <- read_excel(path = \"../../00_data/01_bike_sales/01_raw_data/bikes.xlsx\")\norderlines_tbl <- read_excel(\"../../00_data/01_bike_sales/01_raw_data/orderlines.xlsx\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> New names:\n#> * `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\n# Not necessary for this analysis, but for the sake of completeness\nbikeshops_tbl  <- read_excel(\"../../00_data/01_bike_sales/01_raw_data/bikeshops.xlsx\")\n\n# 3.0 Examining Data ----\n\n\n# 4.0 Joining Data ----\nbike_orderlines_joined_tbl <- orderlines_tbl %>%\n  left_join(bikes_tbl, by = c(\"product.id\" = \"bike.id\")) %>%\n  left_join(bikeshops_tbl, by = c(\"customer.id\" = \"bikeshop.id\"))\n\n# 5.0 Wrangling Data ----\n\n\nbike_orderlines_wrangled_tbl <- bike_orderlines_joined_tbl %>% \n  # 5.1 Separate location\n  separate(col    = location,\n           into   = c(\"city\", \"state\"),\n           sep    = \", \") %>%\n  # 5.2 Add the total price (price * quantity) \n  # Add a column to a tibble that uses a formula-style calculation of other columns\nmutate(total.price = price * quantity) \n\n\n\n# 5.3 Optional: Reorganize. Using select to grab or remove unnecessary columns\n# 5.3.1 by exact column name\nbike_orderlines_wrangled_tbl_reorg<- bike_orderlines_wrangled_tbl %>% select(-...1, -gender)%>% \n  \n  # 5.3.2 by a pattern\n  # You can use the select_helpers to define patterns. \n  # Type ?ends_with and click on Select helpers in the documentation\n  select(-ends_with(\".id\")) %>%\n  \n  # 5.3.3 Actually we need the column \"order.id\". Let's bind it back to the data\n  bind_cols(bike_orderlines_joined_tbl %>% select(order.id)) \n\n# 5.3.4 You can reorder the data by selecting the columns in your desired order.\n# You can use select_helpers like contains() or everything()\nbike_orderlines_wrangled_tbl_reorg_reorder <- bike_orderlines_wrangled_tbl_reorg %>% select(order.id, contains(\"order\"), contains(\"model\"), contains(\"category\"),\n                                                                                            price, quantity, total.price,\n                                                                                            everything()) %>%\n  # 5.4 Rename columns because we actually wanted underscores instead of the dots\n  # (one at the time vs. multiple at once)\n  rename(bikeshop = name) %>%\n  set_names(names(.) %>% str_replace_all(\"\\\\.\", \"_\"))\n\n# 6.0 Business Insights ----\n\n# 6.1 Sales by State ----\n\n# Step 1 - Manipulate\n\nlibrary(lubridate)\n# Step 1 - Manipulate\nsales_by_state_tbl <- bike_orderlines_wrangled_tbl_reorg_reorder %>%\n  \n  # Select columns\n  select(state, total_price) %>%\n  \n  \n  # Grouping by year and summarizing sales\n  group_by(state) %>%\n  summarize(sales = sum(total_price))%>%\n  \n  # Optional: Add a column that turns the numbers into a currency format \n  # (makes it in the plot optically more appealing)\n  # mutate(sales_text = scales::dollar(sales)) <- Works for dollar values\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\nsales_by_state_tbl\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"state\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"sales\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sales_text\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"Baden-Württemberg\",\"2\":\"6521090\",\"3\":\"6.521.090 \\\\200\"},{\"1\":\"Bavaria\",\"2\":\"6742819\",\"3\":\"6.742.819 \\\\200\"},{\"1\":\"Berlin\",\"2\":\"1128433\",\"3\":\"1.128.433 \\\\200\"},{\"1\":\"Bremen\",\"2\":\"10653499\",\"3\":\"10.653.499 \\\\200\"},{\"1\":\"Hamburg\",\"2\":\"3874756\",\"3\":\"3.874.756 \\\\200\"},{\"1\":\"Hesse\",\"2\":\"1558901\",\"3\":\"1.558.901 \\\\200\"},{\"1\":\"Lower Saxony\",\"2\":\"4107115\",\"3\":\"4.107.115 \\\\200\"},{\"1\":\"Mecklenburg-Western Pomerania\",\"2\":\"618974\",\"3\":\"618.974 \\\\200\"},{\"1\":\"North Rhine-Westphalia\",\"2\":\"21200613\",\"3\":\"21.200.613 \\\\200\"},{\"1\":\"Saxony\",\"2\":\"2230245\",\"3\":\"2.230.245 \\\\200\"},{\"1\":\"Saxony-Anhalt\",\"2\":\"569614\",\"3\":\"569.614 \\\\200\"},{\"1\":\"Schleswig-Holstein\",\"2\":\"3224749\",\"3\":\"3.224.749 \\\\200\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# Step 2 - Visualize\nsales_by_state_tbl %>%\n  \n  # Setup canvas with the columns state (x-axis) and sales (y-axis)\n  ggplot(aes(x = state, y = sales)) +\n  \n  # Geometries\n  geom_col(fill = \"#FFC300\") + # Use geom_col for a bar plot\n  geom_label(aes(label = sales_text)) + # Adding labels to the bars\n  \n  \n  # Formatting\n  # scale_y_continuous(labels = scales::dollar) + # Change the y-axis. \n  # Again, we have to adjust it for euro values\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title    = \"Revenue by state\",\n    x = \"\", # Override defaults for x and y\n    y = \"Revenue\" \n  )+ theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 6.2 Sales by state and year  ----\n\n# Step 1 - Manipulate\nsales_by_state_year_tbl <- bike_orderlines_wrangled_tbl_reorg_reorder %>%\n  \n  # Select columns and add a year\n  select(order_date, total_price, state) %>%\n  mutate(year = year(order_date)) %>%\n  \n  # Group by and summarize state and year\n  group_by(state, year) %>%\n  summarise(sales = sum(total_price)) %>%\n  ungroup() %>%\n  \n  # Format $ Text\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `summarise()` has grouped output by 'state'. You can override using the\n#> `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nsales_by_state_year_tbl\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"state\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"year\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sales\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sales_text\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"Baden-Württemberg\",\"2\":\"2015\",\"3\":\"1031924\",\"4\":\"1.031.924 \\\\200\"},{\"1\":\"Baden-Württemberg\",\"2\":\"2016\",\"3\":\"1561658\",\"4\":\"1.561.658 \\\\200\"},{\"1\":\"Baden-Württemberg\",\"2\":\"2017\",\"3\":\"1224152\",\"4\":\"1.224.152 \\\\200\"},{\"1\":\"Baden-Württemberg\",\"2\":\"2018\",\"3\":\"1114327\",\"4\":\"1.114.327 \\\\200\"},{\"1\":\"Baden-Württemberg\",\"2\":\"2019\",\"3\":\"1589029\",\"4\":\"1.589.029 \\\\200\"},{\"1\":\"Bavaria\",\"2\":\"2015\",\"3\":\"1301461\",\"4\":\"1.301.461 \\\\200\"},{\"1\":\"Bavaria\",\"2\":\"2016\",\"3\":\"1129852\",\"4\":\"1.129.852 \\\\200\"},{\"1\":\"Bavaria\",\"2\":\"2017\",\"3\":\"1411851\",\"4\":\"1.411.851 \\\\200\"},{\"1\":\"Bavaria\",\"2\":\"2018\",\"3\":\"1168783\",\"4\":\"1.168.783 \\\\200\"},{\"1\":\"Bavaria\",\"2\":\"2019\",\"3\":\"1730872\",\"4\":\"1.730.872 \\\\200\"},{\"1\":\"Berlin\",\"2\":\"2015\",\"3\":\"95853\",\"4\":\"95.853 \\\\200\"},{\"1\":\"Berlin\",\"2\":\"2016\",\"3\":\"72361\",\"4\":\"72.361 \\\\200\"},{\"1\":\"Berlin\",\"2\":\"2017\",\"3\":\"451293\",\"4\":\"451.293 \\\\200\"},{\"1\":\"Berlin\",\"2\":\"2018\",\"3\":\"318974\",\"4\":\"318.974 \\\\200\"},{\"1\":\"Berlin\",\"2\":\"2019\",\"3\":\"189952\",\"4\":\"189.952 \\\\200\"},{\"1\":\"Bremen\",\"2\":\"2015\",\"3\":\"1395912\",\"4\":\"1.395.912 \\\\200\"},{\"1\":\"Bremen\",\"2\":\"2016\",\"3\":\"2057760\",\"4\":\"2.057.760 \\\\200\"},{\"1\":\"Bremen\",\"2\":\"2017\",\"3\":\"2557145\",\"4\":\"2.557.145 \\\\200\"},{\"1\":\"Bremen\",\"2\":\"2018\",\"3\":\"1833844\",\"4\":\"1.833.844 \\\\200\"},{\"1\":\"Bremen\",\"2\":\"2019\",\"3\":\"2808838\",\"4\":\"2.808.838 \\\\200\"},{\"1\":\"Hamburg\",\"2\":\"2015\",\"3\":\"423090\",\"4\":\"423.090 \\\\200\"},{\"1\":\"Hamburg\",\"2\":\"2016\",\"3\":\"636550\",\"4\":\"636.550 \\\\200\"},{\"1\":\"Hamburg\",\"2\":\"2017\",\"3\":\"731678\",\"4\":\"731.678 \\\\200\"},{\"1\":\"Hamburg\",\"2\":\"2018\",\"3\":\"930803\",\"4\":\"930.803 \\\\200\"},{\"1\":\"Hamburg\",\"2\":\"2019\",\"3\":\"1152635\",\"4\":\"1.152.635 \\\\200\"},{\"1\":\"Hesse\",\"2\":\"2015\",\"3\":\"308609\",\"4\":\"308.609 \\\\200\"},{\"1\":\"Hesse\",\"2\":\"2016\",\"3\":\"225647\",\"4\":\"225.647 \\\\200\"},{\"1\":\"Hesse\",\"2\":\"2017\",\"3\":\"338783\",\"4\":\"338.783 \\\\200\"},{\"1\":\"Hesse\",\"2\":\"2018\",\"3\":\"330647\",\"4\":\"330.647 \\\\200\"},{\"1\":\"Hesse\",\"2\":\"2019\",\"3\":\"355215\",\"4\":\"355.215 \\\\200\"},{\"1\":\"Lower Saxony\",\"2\":\"2015\",\"3\":\"584386\",\"4\":\"584.386 \\\\200\"},{\"1\":\"Lower Saxony\",\"2\":\"2016\",\"3\":\"639839\",\"4\":\"639.839 \\\\200\"},{\"1\":\"Lower Saxony\",\"2\":\"2017\",\"3\":\"1055747\",\"4\":\"1.055.747 \\\\200\"},{\"1\":\"Lower Saxony\",\"2\":\"2018\",\"3\":\"929624\",\"4\":\"929.624 \\\\200\"},{\"1\":\"Lower Saxony\",\"2\":\"2019\",\"3\":\"897519\",\"4\":\"897.519 \\\\200\"},{\"1\":\"Mecklenburg-Western Pomerania\",\"2\":\"2015\",\"3\":\"222003\",\"4\":\"222.003 \\\\200\"},{\"1\":\"Mecklenburg-Western Pomerania\",\"2\":\"2016\",\"3\":\"75443\",\"4\":\"75.443 \\\\200\"},{\"1\":\"Mecklenburg-Western Pomerania\",\"2\":\"2017\",\"3\":\"201218\",\"4\":\"201.218 \\\\200\"},{\"1\":\"Mecklenburg-Western Pomerania\",\"2\":\"2018\",\"3\":\"21041\",\"4\":\"21.041 \\\\200\"},{\"1\":\"Mecklenburg-Western Pomerania\",\"2\":\"2019\",\"3\":\"99269\",\"4\":\"99.269 \\\\200\"},{\"1\":\"North Rhine-Westphalia\",\"2\":\"2015\",\"3\":\"3735092\",\"4\":\"3.735.092 \\\\200\"},{\"1\":\"North Rhine-Westphalia\",\"2\":\"2016\",\"3\":\"3002792\",\"4\":\"3.002.792 \\\\200\"},{\"1\":\"North Rhine-Westphalia\",\"2\":\"2017\",\"3\":\"4671541\",\"4\":\"4.671.541 \\\\200\"},{\"1\":\"North Rhine-Westphalia\",\"2\":\"2018\",\"3\":\"4601681\",\"4\":\"4.601.681 \\\\200\"},{\"1\":\"North Rhine-Westphalia\",\"2\":\"2019\",\"3\":\"5189507\",\"4\":\"5.189.507 \\\\200\"},{\"1\":\"Saxony\",\"2\":\"2015\",\"3\":\"238371\",\"4\":\"238.371 \\\\200\"},{\"1\":\"Saxony\",\"2\":\"2016\",\"3\":\"589994\",\"4\":\"589.994 \\\\200\"},{\"1\":\"Saxony\",\"2\":\"2017\",\"3\":\"595378\",\"4\":\"595.378 \\\\200\"},{\"1\":\"Saxony\",\"2\":\"2018\",\"3\":\"338344\",\"4\":\"338.344 \\\\200\"},{\"1\":\"Saxony\",\"2\":\"2019\",\"3\":\"468158\",\"4\":\"468.158 \\\\200\"},{\"1\":\"Saxony-Anhalt\",\"2\":\"2015\",\"3\":\"144737\",\"4\":\"144.737 \\\\200\"},{\"1\":\"Saxony-Anhalt\",\"2\":\"2016\",\"3\":\"65901\",\"4\":\"65.901 \\\\200\"},{\"1\":\"Saxony-Anhalt\",\"2\":\"2017\",\"3\":\"194509\",\"4\":\"194.509 \\\\200\"},{\"1\":\"Saxony-Anhalt\",\"2\":\"2018\",\"3\":\"81163\",\"4\":\"81.163 \\\\200\"},{\"1\":\"Saxony-Anhalt\",\"2\":\"2019\",\"3\":\"83304\",\"4\":\"83.304 \\\\200\"},{\"1\":\"Schleswig-Holstein\",\"2\":\"2015\",\"3\":\"448844\",\"4\":\"448.844 \\\\200\"},{\"1\":\"Schleswig-Holstein\",\"2\":\"2016\",\"3\":\"672710\",\"4\":\"672.710 \\\\200\"},{\"1\":\"Schleswig-Holstein\",\"2\":\"2017\",\"3\":\"1076996\",\"4\":\"1.076.996 \\\\200\"},{\"1\":\"Schleswig-Holstein\",\"2\":\"2018\",\"3\":\"572622\",\"4\":\"572.622 \\\\200\"},{\"1\":\"Schleswig-Holstein\",\"2\":\"2019\",\"3\":\"453577\",\"4\":\"453.577 \\\\200\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# Step 2 - Visualize\n\nsales_by_state_year_tbl %>%\n  \n  # Set up x, y, fill\n  ggplot(aes(x = year, y = sales, fill = state)) +\n  \n  # Geometries\n  geom_col() + # Run up to here to get a stacked bar plot\n# Facet\nfacet_wrap(~ state) +\n  \n  \n  \n  # Formatting\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title = \"Revenue by state and year\",\n    fill = \"year\" # Changes the legend name\n  )+ theme(axis.text.x = element_text(angle = 90, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "c551344e6c7752cffee379c73c71cea7",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization\"\nauthor: \"Shahrokh Vahedi\"\n---\n\n\n# Challenge 1: Mapping the time course of the cumulative Covid-19 cases!\n\n\nThe following figure shows the time series of total confirmed cases of Covid-19 for selected countries.\n\n![Fig. 1 Total Confirmed Cases of Covid-19](../../assets/img/challenge1_data_visualization.png)\n\n\n# Challenge 2: Visualize the distribution of the mortality rate\n\nThe following figure shows the world map of death rate of Covid-19.\n\n![Fig. 2 Mortality Rate of Covid-19 (as of 25 May 2023)](../../assets/img/ch_2_data_visualization.png)\n\n\n# Source Code\n\n## Challenge 1\n\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-1_6f71358e07676545ef6db81c61d31599'}\n\n```{.r .cell-code}\n# Data Visualization\n\n# Challenge 1\n\n# Load required libraries\nlibrary(tidyverse)   # For data manipulation and visualization\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> -- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\n#> v dplyr     1.1.2     v readr     2.1.4\n#> v forcats   1.0.0     v stringr   1.5.0\n#> v ggplot2   3.4.2     v tibble    3.2.1\n#> v lubridate 1.9.2     v tidyr     1.3.0\n#> v purrr     1.0.1     \n#> -- Conflicts ------------------------------------------ tidyverse_conflicts() --\n#> x dplyr::filter() masks stats::filter()\n#> x dplyr::lag()    masks stats::lag()\n#> i Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggrepel)    # For label repulsion in plots\nlibrary(scales)      # For customizing scale labels\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'scales'\n#> \n#> The following object is masked from 'package:purrr':\n#> \n#>     discard\n#> \n#> The following object is masked from 'package:readr':\n#> \n#>     col_factor\n```\n:::\n\n```{.r .cell-code}\nlibrary(lubridate)   # For working with dates\nSys.setlocale(\"LC_TIME\", \"English\")  # Set English locale for date formatting\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"English_United States.1252\"\n```\n:::\n\n```{.r .cell-code}\n# Read the COVID-19 data from the provided URL\nworld_cov_data <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 313070 Columns: 67\n#> -- Column specification --------------------------------------------------------\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> i Use `spec()` to retrieve the full column specification for this data.\n#> i Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n# Select only the relevant columns: date, continent, location, and total_cases\nworld_cov_data <- world_cov_data %>% \n  select(date, continent, location, total_cases) %>% \n  filter(!is.na(total_cases))\n\n# Convert the date column to Date format\nworld_cov_data$date <- as.Date(world_cov_data$date)\n\n# Select data for chosen countries\nchosen_count <- c(\"Europe\", \"France\", \"Germany\", \"Spain\", \"United Kingdom\", \"United States\")\nchosen_data <- world_cov_data %>% filter(location %in% chosen_count)\n\n# Create a vector of distinct colors\nline_colors <- c(\"#FF0000\", \"#00FF00\", \"#0000FF\", \"#FF00FF\", \"#FFFF00\", \"#00FFFF\")\n\n# Create the plot\nggplot(chosen_data, aes(x = date, y = total_cases, color = location, group = location)) +\n  geom_line(size = 1) +\n  geom_label_repel(data = chosen_data %>% filter(date == max(date)), aes(label = location, x = date, y = total_cases),\n                   size = 4, box.padding = unit(0.5, \"lines\"), point.padding = unit(0.4, \"lines\"), show.legend = FALSE) +\n  labs(title = \"Covid-19 Confirmed Cases Worldwide\", subtitle = \"Data as of 25/05/2023\", y = \"Cumulative Cases\", x = \"Continent/Country\") +\n  scale_y_continuous(labels = function(x) format(x/1e6, big.mark = \" \", scientific = FALSE) %>% paste0(\" \", \"M\")) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%B '%y\") +\n  scale_color_manual(values = line_colors) +\n  theme(plot.title = element_text(hjust = 0.5),\n        axis.text.x = element_text(angle = 45, hjust = 1),\n        legend.position = \"bottom\",\n        legend.title = element_text(size = 12),\n        legend.text = element_text(size = 10),\n        legend.margin = margin(t = 10),\n        legend.box = \"horizontal\",\n        legend.box.just = \"center\",\n        legend.spacing.x = unit(0.1, \"cm\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n#> i Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\n## Chalenge 2\n\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-2_ebe6ab0ecf9a0cee61614c46398ff048'}\n\n```{.r .cell-code}\n# Data Visualization\n## Challenge 2\n\n# Load required libraries\nlibrary(tidyverse)   # For data manipulation and visualization\nlibrary(maps)       # For map data and plotting geographic maps\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'maps'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> The following object is masked from 'package:purrr':\n#> \n#>     map\n```\n:::\n\n```{.r .cell-code}\nlibrary(mapdata)    # Additional map datasets for use with maps package\nlibrary(ggplot2)    # For creating visually appealing and customizable graphics\nlibrary(scales)     # Customizing scale labels in plots\n\n# Read the COVID-19 data from the provided URL\nworld_cov_data <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 313070 Columns: 67\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> -- Column specification --------------------------------------------------------\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> i Use `spec()` to retrieve the full column specification for this data.\n#> i Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n# Select only the relevant columns: date, location, population, total_cases, total_deaths\nworld_cov_data <- world_cov_data %>% \n  select(date, location, population, total_cases, total_deaths) %>% \n  filter(!is.na(total_cases), !is.na(total_deaths))\n\n# Calculate mortality rate by dividing the total deaths by the population\nmort_rate <- world_cov_data$total_deaths / world_cov_data$population\nworld_cov_data <- world_cov_data %>% mutate(mortality_rate = mort_rate)\n\n# Select the most recent data for each location\nrecent_data <- world_cov_data %>% \n  group_by(location) %>% \n  slice_tail(n = 1)\n\n# Align country names to match the names used in the map data\nrecent_data <- recent_data %>% \n  mutate(location = case_when(\n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n  )) %>% \n  distinct()\n\n# Merge the data with map data\nworld_mp_data <- map_data(\"world\")\nworld_map_data <- right_join(world_mp_data, recent_data, by = c(\"region\" = \"location\"))\n\n# Plotting the map\nplot_data <- ggplot() +\n  geom_map(data = world_map_data, map = world_map_data, aes(map_id = region, fill = mortality_rate),\n           color = \"white\", size = 0.1) +\n  expand_limits(x = world_mp_data$long, y = world_mp_data$lat) +\n  scale_fill_gradient(low = \"red\", high = \"black\", name = \"Mortality Rate\",\n                      labels = scales::percent_format()) +\n  labs(title = \"Confirmed COVID-19 deaths relative to the size of the population\",\n       subtitle = \"Around 6.9 Million confirmed COVID-19 deaths worldwide (May 2023)\") +\n  theme_void() +\n  theme(plot.title = element_text(hjust = 0.5, size = 11, face = \"bold\"),\n        plot.subtitle = element_text(hjust = 0.5, size = 9),\n        legend.position = \"right\",\n        legend.title.align = 0.5,\n        legend.text = element_text(size = 7),\n        legend.title = element_text(size = 9),\n        panel.background = element_rect(fill = \"transparent\", color = \"white\"))\n\nprint(plot_data)\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}